# -*- coding: utf-8 -*-
"""gptIntegration.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15bfkSKfVu8LK0wJpdemJlOdo9rbeWDQc
"""

import os
os.environ["OPENAI_API_KEY"] = "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" #esta key tenemos que cambiarla si ganamos

import os
from openai import OpenAI

MODEL = "gpt-4.1-mini"

client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

def openai_kuddo_from_params(giver: str, receiver: str, count: int, reason: str) -> str:
    """
    Genera un mensaje breve (2‚Äì3 oraciones, <60 palabras), tono medieval, en espa√±ol.
    Usa giver/receiver tal cual llegan (pueden ser menciones <@U...>).
    """
    prompt = (
        "Escribe un √∫nico p√°rrafo de 2‚Äì3 oraciones, tono amistoso y tem√°tica medieval, "
        "para un mensaje de Slack. Mant√©n menos de 60 palabras y sin hashtags. "
        "Usa exactamente los valores de Dador/Receptor tal como vienen (pueden ser menciones tipo <@U123>). "
        f"\nDador: {giver}\nReceptor: {receiver}\nSemillas: {count}\nMotivo: {reason or 'excelente trabajo'}"
    )
    try:
        res = client.responses.create(model=MODEL, input=prompt)
        return res.output_text.strip()
    except Exception as e:
        # imprime el error en consola para depuraci√≥n
        print("‚ùå Error en openai_kuddo_from_params:", repr(e))
        base = f"¬°O√≠d! {giver} otorga {count} semillas a {receiver}."
        if reason:
            base += f" Motivo: {reason}."
        return base + " ¬°Que la cosecha sea abundante!"


def openai_medievalize_message(message: str) -> str:
    """
    Convierte un texto cualquiera a estilo medieval (espa√±ol), manteniendo menciones <@U...>,
    emojis y URLs intactos. Devuelve un p√°rrafo corto (<60 palabras).
    """
    prompt = (
        "Reescribe el siguiente texto en espa√±ol con tono medieval, amable y √©pico, "
        "en un solo p√°rrafo breve (<60 palabras), sin hashtags, y sin eliminar ni alterar "
        "menciones de Slack (<@U...>), emojis y URLs. No inventes datos."
        f"\n\nTexto original:\n{message}"
    )
    try:
        res = client.responses.create(model=MODEL, input=prompt)
        return res.output_text.strip()
    except Exception:
        return f"üè∞ {message}"

# tests
# print("‚Äî"*60)
# print(openai_kuddo_from_params("<@U_DADOR>", "<@U_RECEPTOR>", 2, "Por organizar una gran hackaton"))

# print("‚Äî"*60)
# print(openai_kuddo_from_params("<@U_DADOR>", "<@U_RECEPTOR>", 1, "por haber completado su proyecto en tiempo r√©cord"))

# print("‚Äî"*60)
# print(openai_kuddo_from_params("<@U_DADOR>", "<@U_RECEPTOR>", 3, ""))

# print("‚Äî"*60)
# print(openai_medievalize_message("Gracias <@U_RECEPTOR> por cubrir el ultimo spike"))